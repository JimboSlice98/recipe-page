name: Build and deploy Python app to Azure Web App - YourRecipeWorld

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  
  # Rebuild container image and push to acr
  build-and-push-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: SSERecipeContainers.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build ./user-details -t SSERecipeContainers.azurecr.io/sse-user-details-container:latest
          docker push SSERecipeContainers.azurecr.io/sse-user-details-container:latest
  
  # Delete old contain instance and redeploy
  deploy-to-aci:
    runs-on: ubuntu-latest
    needs: build-and-push-docker
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Delete existing Azure Container Instance
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az container delete --name sse-user-details-container --resource-group SSE-recipe --yes || true

      - name: Deploy new Azure Container Instance
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az container create \
              --resource-group SSE-recipe \
              --name sse-user-details-container \
              --image SSERecipeContainers.azurecr.io/sse-user-details-container:latest \
              --dns-name-label dnsawdrsseuserdetails \
              --ports 5000 \
              --registry-login-server SSERecipeContainers.azurecr.io \
              --registry-username ${{ secrets.ACR_USERNAME }} \
              --registry-password ${{ secrets.ACR_PASSWORD }} \
              --environment-variables FLASK_ENV="production" SETTING_DB_DRIVER="${{ secrets.SETTING_DB_DRIVER }}" SETTING_DB_SERVER="${{ secrets.SETTING_DB_SERVER }}" SETTING_DB_NAME="${{ secrets.SETTING_DB_NAME }}" SETTING_DB_USER="${{ secrets.SETTING_DB_USER }}" SETTING_DB_PASS="${{ secrets.SETTING_DB_PASS }}"


  build-web-app:
    runs-on: ubuntu-latest
    needs: build-and-push-docker
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: '3.10'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
        working-directory: main-site/api

      - name: Install dependencies
        run: pip install -r main-site/api/requirements.txt

      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Zip artifact for deployment
        run: zip -r release.zip ./*
        working-directory: main-site/api

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v3
        with:
          name: python-app
          path: main-site/api/release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build-web-app
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'YourRecipeWorld'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_432E0FF062964311A6EB42BBF78A9DE7 }}
